[{"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\App.js":"3","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\Main.jsx":"4","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\index.jsx":"5","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RegisterSignIn\\index.jsx":"6","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\memoryGame\\index.jsx":"7","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\index.jsx":"8","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\guestPick.jsx":"9","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\HousePick.jsx":"10","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\ScoreShow.jsx":"11","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\releaseWin.jsx":"12","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\memoryGame\\Board.jsx":"13","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\PlayerCards.jsx":"14","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\TryAgain.jsx":"15","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\globalScore.jsx":"16","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\score.jsx":"17","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\memoryGame\\Card.jsx":"18"},{"size":528,"mtime":1610114905416,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1610114905417,"results":"21","hashOfConfig":"20"},{"size":172,"mtime":1610114905399,"results":"22","hashOfConfig":"20"},{"size":1779,"mtime":1610114905400,"results":"23","hashOfConfig":"20"},{"size":4366,"mtime":1610114905403,"results":"24","hashOfConfig":"20"},{"size":2085,"mtime":1610117546437,"results":"25","hashOfConfig":"20"},{"size":1765,"mtime":1610114905414,"results":"26","hashOfConfig":"20"},{"size":3383,"mtime":1610114905415,"results":"27","hashOfConfig":"20"},{"size":957,"mtime":1610115224955,"results":"28","hashOfConfig":"20"},{"size":483,"mtime":1610115249049,"results":"29","hashOfConfig":"20"},{"size":982,"mtime":1610114905415,"results":"30","hashOfConfig":"20"},{"size":2226,"mtime":1610115332330,"results":"31","hashOfConfig":"20"},{"size":4246,"mtime":1610116836333,"results":"32","hashOfConfig":"20"},{"size":640,"mtime":1610114905401,"results":"33","hashOfConfig":"20"},{"size":295,"mtime":1610115366847,"results":"34","hashOfConfig":"20"},{"size":606,"mtime":1610115489427,"results":"35","hashOfConfig":"20"},{"size":420,"mtime":1610116261687,"results":"36","hashOfConfig":"20"},{"size":298,"mtime":1610114905404,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1q14u1r",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\index.js",[],["77","78"],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\App.js",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\Main.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\index.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RegisterSignIn\\index.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\memoryGame\\index.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\index.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\guestPick.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\HousePick.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\ScoreShow.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\releaseWin.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\memoryGame\\Board.jsx",["79"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./css/Board.css\";\r\n//using hooks allows you to use state and other React features without writing a class\r\n//let you always use functions instead of having to constantly\r\n// switch between functions, classes, higher-order components, and render props.\r\n//3 state ; cards ,chekers, completed\r\nconst Board = (props) => {\r\n  const [cards, setCards] = useState(props.cards /*initial state */);\r\n  const [checkers, setCheckers] = useState([]);\r\n  const [completed, setCompleted] = useState([]);\r\n  const [completedCount, setcompletedCount] = useState(0);\r\n  const [result, setresult] = useState(\"\");\r\n  const [showen, setShowen] = useState(\"true\");\r\n  const [clicked, setclicked] = useState(\"false\");\r\n\r\n  const onCardClick = (card) => () => {\r\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\r\n\r\n    setcompletedCount(completedCount - 5);\r\n\r\n    const newCheckers = [...checkers, card];\r\n    setCheckers(newCheckers);\r\n    //validateCheckers confirm that we have the same card\r\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\r\n    if (cardsInCheckersMatched) {\r\n      setcompletedCount(completedCount + 10);\r\n      setCompleted([...completed, newCheckers[0].type]);\r\n      console.log(\"completed\", completed);\r\n    }\r\n\r\n    if (checkersFull(newCheckers)) {\r\n      resetCheckersAfter(1000);\r\n    }\r\n    function validateCheckers(checkers) {\r\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\r\n    }\r\n    function cardAlreadyInCheckers(checkers, card) {\r\n      return checkers.length === 1 && checkers[0].id === card.id;\r\n    }\r\n    function checkersFull(checkers) {\r\n      return checkers.length === 2;\r\n    }\r\n    function completedFull(completed) {\r\n      return completed.length === 6;\r\n    }\r\n\r\n    //wait some time so that the user can see the cards\r\n    function resetCheckersAfter(time) {\r\n      setTimeout(() => {\r\n        setCheckers([]);\r\n      }, time);\r\n    }\r\n    function score() {\r\n      if (completedCount === -100) {\r\n        setShowen(false);\r\n        setresult(\"you lost!\");\r\n      } else if (completedFull(completed)) {\r\n        console.log(\"result\", result);\r\n        setresult(\"Awesome!, You won the game\");\r\n      }\r\n    }\r\n    score();\r\n  };\r\n  //make the cards changed when checkers or completed changed\r\n  useEffect(() => {\r\n    const newCards = cards.map((card) => ({\r\n      ...card,\r\n      flipped:\r\n        checkers.find((c) => c.id === card.id) || completed.includes(card.type),\r\n    }));\r\n    setCards(newCards);\r\n  }, [checkers, completed]);\r\n  function restart() {\r\n    setCards(props.cards);\r\n    setCheckers([]);\r\n    setCompleted([]);\r\n    setcompletedCount(0);\r\n    setresult(\"\");\r\n  }\r\n  function clickk() {\r\n    setclicked(\"true\");\r\n  }\r\n  function hundleClick() {\r\n    restart();\r\n    clickk();\r\n    setShowen(true);\r\n  }\r\n  console.log(\"completedCount\", completedCount);\r\n  return (\r\n    <div className=\"container\">\r\n      {showen ? (\r\n        <div\r\n          className=\"boarding\"\r\n          style={{\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <h2\r\n            className=\"completed\"\r\n            style={{\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            score : {completedCount}\r\n          </h2>\r\n          {cards.map((card) => (\r\n            <Card {...card} onClick={onCardClick(card)} key={card.id} />\r\n          ))}\r\n        </div>\r\n      ) : clicked ? (\r\n        <>\r\n          <div className=\"score-section\">\r\n            <h2\r\n              className=\"moves\"\r\n              style={{\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {result}\r\n            </h2>\r\n            <button className=\"result\" onClick={hundleClick}>\r\n              Play again\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"score-section\">\r\n            <h2\r\n              className=\"moves\"\r\n              style={{\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {result}\r\n            </h2>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\PlayerCards.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\RockPaperScissors\\TryAgain.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\globalScore.jsx",[],["80","81"],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\quiz\\score.jsx",[],"C:\\Users\\PC\\Desktop\\galaxy-app-1\\client\\src\\components\\memoryGame\\Card.jsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":73,"column":6,"nodeType":"88","endLine":73,"endColumn":27,"suggestions":"89"},{"ruleId":"82","replacedBy":"90"},{"ruleId":"84","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array.","ArrayExpression",["94"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [cards, checkers, completed]",{"range":"97","text":"98"},[2611,2632],"[cards, checkers, completed]"]